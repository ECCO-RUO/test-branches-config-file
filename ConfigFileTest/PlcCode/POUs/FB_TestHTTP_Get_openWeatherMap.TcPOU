<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FB_TestHTTP_Get_openWeatherMap" Id="{eca3dfed-7a20-454d-89af-a713fb3d59c6}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TestHTTP_Get_openWeatherMap
VAR_INPUT
    bSend             : BOOL;
END_VAR
VAR_IN_OUT
    fbClient          : FB_IotHttpClient;
END_VAR
VAR_OUTPUT
    bBusy             : BOOL;
    bError            : BOOL;
END_VAR
VAR
    fbRequest         : FB_IotHttpRequest;
    fbJson            : FB_JsonDomParser;
    nState            : UDINT;
    RisingEdge        : R_TRIG;

    bGetContentResult : BOOL;
    sContent          : STRING(511);

    bGetJsonResult    : BOOL;
    jsonDoc           : SJsonValue;
    jsonVal           : SJsonValue;
    sResultValue      : STRING;

    nReqCount         : UDINT;
    nResCount         : UDINT;
    nValidResCount    : UDINT;
    nErrCount         : UDINT;
	
	// split string
	aSplit					:ARRAY[0..cMax] OF STRING(255);
	bResultSplit			:BOOL;
	ii						:UDINT;
END_VAR
VAR CONSTANT
	cMax					:UDINT := 15;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[RisingEdge(CLK:= bSend);
CASE nState OF
0:
    IF RisingEdge.Q THEN
        IF fbRequest.SendRequest(sUri:= '/repos/ECCO-RUO/test-branches-config-file/tags',
                                 fbClient:= fbClient, 
                                 eRequestType:= ETcIotHttpRequestType.HTTP_Get, 0, 0, 0) THEN
            nState:= 1;
            nReqCount:= nReqCount+1;
            bBusy:= TRUE;
            bError:= FALSE;
        END_IF
    END_IF
1:
    IF NOT fbRequest.bBusy THEN
        bError:= TRUE;
        IF NOT fbRequest.bError THEN
            bGetContentResult:= fbRequest.GetContent(pContent:= ADR(sContent), 
                                                     nContentSize:= SIZEOF(sContent), 
                                                     bSetNullTermination:= TRUE);
            IF fbRequest.nStatusCode >= 200 AND fbRequest.nStatusCode < 300 THEN
                bGetJsonResult:= FALSE;
                jsonDoc:= fbRequest.GetJsonDomContent(fbJson);
                IF jsonDoc <> 0 THEN
					
					//do something with the weather data
//                    GVL.sVars.sTag := sContent;
					// split/parse strings
					FOR ii := 0 TO cMax - 1 DO
						
						aSplit[ii] := sContent;
						bResultSplit := FindAndSplitChar(sSeparatorChar := '"', pSrcString := ADR(aSplit[ii]),
														  pLeftString := ADR(aSplit[ii + 1]), nLeftSize := SIZEOF(aSplit[ii + 1]),
														  pRightString := ADR(aSplit[ii]), nRightSize := SIZEOF(aSplit[ii]),
														  bSearchFromRight := FALSE);
														  
						// assign values from config file
						GVL.sVars.sEnvironment		:= aSplit[0];
						
						IF NOT bResultSplit THEN
							EXIT;
						END_IF
					END_FOR
					
					nValidResCount:= nValidResCount+1;
                    bError:= FALSE;
                END_IF
                nResCount:= nResCount+1;
            END_IF
        END_IF
        nState:= 0;
        bBusy:= FALSE;
        IF bError THEN
            nErrCount:= nErrCount+1;
        END_IF
    END_IF
END_CASE]]></ST>
    </Implementation>
    <LineIds Name="FB_TestHTTP_Get_openWeatherMap">
      <LineId Id="39" Count="23" />
      <LineId Id="107" Count="1" />
      <LineId Id="64" Count="0" />
      <LineId Id="112" Count="9" />
      <LineId Id="134" Count="4" />
      <LineId Id="110" Count="1" />
      <LineId Id="109" Count="0" />
      <LineId Id="65" Count="10" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>